
apply plugin: 'java'
apply plugin: "groovy"
apply plugin: 'eclipse'
apply plugin: 'org.sonarqube'
apply plugin: 'com.wellsfargo.gradleFortify'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: "war"

configurations {
    spi
}

buildscript {
	ext {
		springBootVersion = '2.0.6.RELEASE'
	}

  }
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.7.1")
	        classpath("com.wellsfargo.genesis.gradle:fortify-plugin:3.3.1")
	}
}

sourceSets.main.java.srcDirs = ['src']
sourceCompatibility = 1.8
group = "com.wellsfargo.3tera"
//version = "1.0.0-${BUILD_NUMBER}"

sourceSets {
    main {
        java {
            srcDirs = ['src/main/java',
            'generated/src/main/java']
           exclude("/test/**")
        }
        resources{
            srcDirs = ['src/main/resources']
       }
    }

}

def getBuildDatetime() {
	def date = new Date()
	def formattedDate = date.format('yyyyMMdd-HHmmss-z')
	return formattedDate
}

def getBuildVersion() {
	def branchName = "${System.env.BRANCH_NAME}"
	if (branchName.isBlank() || branchName.equalsIgnoreCase("null")) {
		//Local Build
		branchName = "LocalBranch"
	}
	def buildNum = "${System.env.BUILD_NUMBER}"
	if (buildNum.isBlank() || buildNum.equalsIgnoreCase("null")) {
		//Local Build
		buildNum = "${InetAddress.localHost.hostName}"
	}
	
	return appReleaseVersion + "_" + branchName + "-" + buildNum
 }

//war {
	//dependsOn("buildJars")

	//manifest {
		//attributes(
			//"Info": "EntityReceiptWeb.war",
			//"Built-By": "${rootProject.name}",
			//"Specification-Title": "EntityReceiptWeb",
			//"Specification-Vendor": "Wells Fargo Bank, Trust Shared Services",
			//"Specification-Version": "${appReleaseVersion}".toString(),
			//"Implementation-Title": "EntityReceiptWeb",
			//"Implementation-Vendor": "Wells Fargo Bank, Trust Shared Services",
			//"Implementation-Version": "Version: " + getBuildVersion().toString() + " - Build-Timestamp: " + getBuildDatetime().toString()
		//)
	//}
//}


//configurations.all {  
  //all*.exclude group: 'org.apache.tomcat.embed'  
//}

dependencies {
	compile(group: 'com.wellsfargo.cloud', name: 'wf-cloud-tls', version: '2.6.0')
	compile(group: 'org.yaml', name: 'snakeyaml', version: '1.26')
	
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	runtimeOnly 'org.springframework.boot:spring-boot-devtools',
	'oracle:ojdbc6:11.2.0.2.0'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	//compile(group: 'com.wellsfargo.tera', name: 'SplunkLogger', version: '1.0.0-1')
	compile 'javax.servlet:javax.servlet-api:4.0.1',
	//'org.apache.httpcomponents:httpclient:4.5',
	'com.wellsfargo.tera:SplunkLogger:1.0.0-1',
	'com.idfconnect.ssorest.plugin:ssorest-plugin-filter-full:3.0.31'
	//project(':SplunkLogger')
    implementation project(':shared')
    implementation module("commons-lang:commons-lang:2.4") {
        dependency("commons-io:commons-io:1.2")
    }
    implementation group: 'org.apache.wicket', name: 'wicket', version: '1.3.7'

	compile('org.springframework.boot:spring-boot-starter-web'){		
		exclude group: 'com.fasterxml.jackson.core', module: 'jackson-annotations'
        exclude group: 'com.fasterxml.jackson.core', module: 'jackson-core'
        exclude group: 'com.fasterxml.jackson.core', module: 'jackson-databind'
        exclude group: 'com.fasterxml.jackson.datatype', module: 'jackson-datatype-jdk8'
        exclude group: 'com.fasterxml.jackson.datatype', module: 'jackson-datatype-jsr310'
        exclude group: 'com.fasterxml.jackson.module', module: 'jackson-module-parameter-names'
    }
    compile('com.fasterxml.jackson.core:jackson-core:2.10.1')
    compile('com.fasterxml.jackson.core:jackson-databind:2.10.1')
    compile('com.fasterxml.jackson.datatype:jackson-datatype-jdk8:2.10.1')
    compile('com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.10.1')
    compile('com.fasterxml.jackson.module:jackson-module-parameter-names:2.10.1')	 
}

processResources.dependsOn(':3tera-ui:copyUIFiles')


artifactory {
    publish {
        repository {
            // This is an optional section for configuring Ivy publication (when publishIvy = true).
            ivy {
                ivyLayout = '[organization]/[module]/ivy-[revision].xml'
                artifactLayout = '[organization]/[module]/[revision]/[module]-[revision](-[classifier]).[ext]'
                mavenCompatible = true //Convert any dots in an [organization] layout value to path separators, similar to Maven's groupId-to-path conversion. True if not specified
            }
        }
        defaults {
            // Reference to Gradle publications defined in the build script.
            // This is how we tell the Artifactory Plugin which artifacts should be
            // published to Artifactory.
            publications('mavenJava')
            publishArtifacts = true
            // Properties to be attached to the published artifacts.
            properties = ['qa.level': 'basic', 'dev.team' : 'core']
            publishPom = true // Publish generated POM files to Artifactory (true by default)
            publishIvy = true // Publish generated Ivy descriptor files to Artifactory (true by default)
        }
    }
}